name: Test and Release Master

on:
  push:
    branches: [ master ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set deploy directory
        run: DEPLOY_DIR=$(date +%Y%m%d%H%M%S) && echo "::set-env name=DEPLOY_DIR::$DEPLOY_DIR"
      - name: Create deploy directory
        run: echo $DEPLOY_DIR && mkdir -p $DEPLOY_DIR
      - name: Move files to deploy directory
        run: find . -mindepth 1 -maxdepth 1 ! -regex ".\/$DEPLOY_DIR$" -exec mv '{}' ./$DEPLOY_DIR/ \;
      - name: Deploy to Production
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.KEY }}
          ARGS: "-rltgoDzvO --exclude '.git' --exclude '.github'"
          SOURCE: $DEPLOY_DIR
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: "/var/www/html/releases/"
      - name: Go live
        uses: appleboy/ssh-action@master
        env:
          DEPLOY_DIR: /var/www/html/releases/${{env.DEPLOY_DIR}}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: DEPLOY_DIR
          script: |
            cp /var/www/html/config/.env $DEPLOY_DIR/.env
            cd $DEPLOY_DIR && composer install --no-interaction --no-dev --prefer-dist
            cd $DEPLOY_DIR && php artisan migrate --force
            ln -sfn $DEPLOY_DIR /var/www/html/current
            cd $DEPLOY_DIR && rm `ls -t /var/www/html/releases/ | awk 'NR>2'`
          debug: true